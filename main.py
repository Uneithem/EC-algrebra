#for this project I've chosen ecpy module by Cedric Mesnil
#more info can be found at https://ec-python.readthedocs.io/en/latest/
from ecpy.curves import Curve, Point
from ecpy.ecrand import rnd

#this function checks if d*(k*G) = k*(d*G)
def Check(G):
    #firstly, two random numbers are generated. in this module rnd generates random number which
    # is smaller than q and has same bit length as q
    q = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    k = rnd(q)
    d = rnd(q)
    H1 = cv.mul_point(k, G)
    H2 = cv.mul_point(d, H1)
    H3 = cv.mul_point(d, G)
    H4 = cv.mul_point(k, H3)
    if H2 == H4:
        return 'The library has passed the test'
    else:
        return 'The library failed the test'

#I've chosen secp256k1 curve for my test, you can see more available curves at above mentioned web-page
cv = Curve.get_curve('secp256k1')
print('Chosen curve is generated by point', cv.generator)
G = cv.generator
P = Point(0x65d5b8bf9ab1801c9f168d4815994ad35f1dcb6ae6c7a1a303966b677b813b00,0xe6b865e529b8ecbf71cf966e900477d49ced5846d7662dd2dd11ccd55c0aff7f, cv)
k0 = 0xfb26a4e75eec75544c0f44e937dcf5ee6355c7176600b9688c667e5c283b43c5
print('Point P belongs to selected curve is', P.is_on_curve)
print('The sum of points P and G is', cv.add_point(P, G))
print('The product of P and k is', cv.mul_point(k0, P))
print('The sum of P and P is', cv.mul_point(k0, P))
print(Check(G))
